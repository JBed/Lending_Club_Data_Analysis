Z
ab <- a %o% b
f <- function(x, y) cos(y)/(1 + x^2)
Lst <- list(name="Fred", wife="Mary", no.children=3,
child.ages=c(4,7,9))
Lst$name
Lst$wife
Lst$child.ages[1]
accountants <- data.frame(home=statef, loot=incomes, shot=incomef)
attach(faithful)
summary(eruptions)
fivenum(eruptions)
stem(eruptions)
obj <- objects()
obj
rm(obj)
attach(faithful)
summary(eruptions)
fivenum(eruptions)
stem(eruptions)
hist(eruptions)
hist(eruptions, seq(1.6, 5.2, 0.2), prob=TRUE) > lines(density(eruptions, bw=0.1))
rug(eruptions)
plot(ecdf(eruptions), do.points=FALSE, verticals=TRUE)
A <- scan()
B <- scan()
library(randtoolbox)
halton(10, dim = 2, init = TRUE, normal = FALSE, usetime = FALSE)
install.packages(c("caret", "sandwich"))
install.packages("randtoolbox")
library(randtoolbox)
halton(10, dim = 2, init = TRUE, normal = FALSE, usetime = FALSE)
halton(10, dim = 1, init = TRUE, normal = FALSE, usetime = FALSE)
A<-halton(100, dim = 1, init = TRUE, normal = FALSE, usetime = FALSE)
b<-halton(100, dim = 1, init = TRUE, normal = FALSE, usetime = FALSE)
B<-halton(100, dim = 1, init = TRUE, normal = FALSE, usetime = FALSE)
B<-halton(100, dim = 1, init = TRUE, normal = TRUE, usetime = FALSE)
A<-halton(100, dim = 1, init = TRUE, normal = TRUE, usetime = FALSE)
A<-halton(100, dim = 1, init = TRUE, normal = FALSE, usetime = FALSE)
boxplot(A, B)
t.test(A, B)
var.test(A, B)
t.test(A, B, var.equal=TRUE)
wilcox.test(A, B)
plot(ecdf(A), do.points=FALSE, verticals=TRUE, xlim=range(A, B))
plot(ecdf(B), do.points=FALSE, verticals=TRUE, add=TRUE)
ks.test(A, B)
xc <- split(x, ind)
yc <- split(y, ind)
for (i in 1:length(yc)) {
plot(xc[[i]], yc[[i]])
abline(lsfit(xc[[i]], yc[[i]]))
}
obj <- objects()
obj
rm(obj)
Ax <- runif(100)
Bx <- runif(100)
Ax ~ Bx
y ~ A + x
Ax ~ Bx + x
lm(Ax~Bx)
olm <- lm(A~B)
A <- runif(100)
B <- runif(100)
C <- runif(100)
#The basic function for fitting ordinary multiple models is lm(),
#ordinary least squars
olm <- lm(A~B)
olm2 <- lm(A~B+C)
anova(A,B)
anova(olm,olm2)
coef(olm)
plot(olm)
plot(olm2)
predict(olm, newdata=data.frame)
print(olm)
step(olm)
summary(olm)
summary(olm2)
vcov(olm)
vcov(olm2)
predict(olm, newdata=randif(100))
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
source('~/.active-rstudio-document')
npk.aov <- aov(yield ~ block + N*P*K, npk)
(termL <- attr(terms(npk.aov), "term.labels"))
(pt <- predict(npk.aov, type = "terms"))
pt. <- predict(npk.aov, type = "terms", terms = termL[1:4])
stopifnot(all.equal(pt[,1:4], pt.,
tolerance = 1e-12, check.attributes = FALSE))
w <- 1 + x^2
fit <- lm(y ~ x)
wfit <- lm(y ~ x, weights = w)
predict(fit, interval = "prediction")
predict(wfit, interval = "prediction")
predict(wfit, new, interval = "prediction")
predict(wfit, new, interval = "prediction", weights = (new$x)^2)
predict(wfit, new, interval = "prediction", weights = ~x^2)
random <- cbind(runif(1000),runif(1000))
halton <- halton(1000, dim = 2, init = TRUE, normal = FALSE, usetime = FALSE)
par(mfrow=c(2,2))
plot(halton[,1],halton[,2])
plot(random[,1],random[,2])
obj <- objects()
obj
rm(obj)
a = c(65, 48, 66, 75, 70, 55)
b = c(64, 44, 70, 70, 68, 59)
c = c(60, 50, 65, 69, 69, 57)
d = c(62, 46, 68, 72, 67, 56)
dati = c(a, b, c, d)
groups = factor(rep(letters[1:4], each = 6))
#Analysis of variance and model comparison
fm05 <- lm(y ~ x1 + x2 + x3 + x4 + x5, data = production)
fm6  <- update(fm05, . ~ . + x6)
smf6 <- update(fm6, sqrt(.) ~ .)
a = c(65, 48, 66, 75, 70, 55)
b = c(64, 44, 70, 70, 68, 59)
c = c(60, 50, 65, 69, 69, 57)
d = c(62, 46, 68, 72, 67, 56)
dati = c(a, b, c, d)
groups = factor(rep(letters[1:4], each = 6))
bartlett.test(dati, groups)
qchisq(0.950, 3)
a = c(65, 48, 66, 75, 70, 55)
b = c(64, 44, 70, 70, 68, 59)
c = c(60, 50, 65, 69, 69, 57)
d = c(62, 46, 68, 72, 67, 56)
dati = c(a, b, c, d)
groups = factor(rep(letters[1:4], each = 6))
fligner.test(dati, groups)
fit = lm(formula = dati ~ groups)
anova(fit)
x1 <- randif(100)
x2 <- randif(100)
fm <- glm(y ~ x1 + x2, family = gaussian, data = sales)
q()
install.packages("stringr")
install.packages("evaluate")
install.packages("formatR")
install.packages("pdflatex")
q()
devtools::install_github("rstudio/shinyapps")
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
shinyapps::deployApp()
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
install.packages(c('ggplot2', 'shiny'))
library(shiny)
library(ggplot2)
shinyapps::setAccountInfo(
name="jbedford",
token="610D5B65D9E73785B94F0FEACA3EF334",
secret="pPOXuZERpJ7Y3miscAcn8CG4AIrwPw7vzncmvIUR")
install.packages("highr")
install.packages("markdown")
q()
devtools::install_github("rstudio/rticles")
terminateApp("<your app's name>")
terminateApp("Desktop")
library(shinyapps)
terminateApp("Desktop")
q()
library(nycflights13)
install.packages("nycflights13")
install.packages("dplyr")
install.packages("ggvis")
install.packages("lubridate")
library(nycflights13)
library(dplyr)
library(ggvis)
library(lubridate)
daily <- flights %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(
delay = mean(dep_delay, na.rm = TRUE),
cancelled = mean(is.na(dep_delay))
)
daily_weather <- weather %>%
filter(origin == "EWR") %>%
group_by(year, month, day) %>%
summarise(
temp = mean(temp, na.rm = TRUE),
wind = mean(wind_speed, na.rm = TRUE),
precip = sum(precip, na.rm = TRUE)
)
both <- daily %>%
inner_join(daily_weather) %>%
ungroup() %>%
mutate(date = as.Date(ISOdate(year, month, day)))
both %>%
ggvis(x = ~temp, y = ~delay) %>%
layer_points() %>%
layer_smooths()
both %>%
ggvis(~temp, ~delay, fill = ~precip) %>%
layer_points()
both %>% ggvis(~delay) %>% layer_histograms()
both %>% ggvis(~delay)
both %>%
ggvis(~delay) %>%
layer_histograms(binwidth = input_slider(1, 10, value = 5))
ddat %>% ggvis(x = ~time, y = ~value, key := ~time) %>%
layer_points() %>%
layer_paths()
flights %>% ggvis(~dep_delay) %>%
layer_histograms(binwidth = input_slider(1, 10)) %>%
scale_numeric("x",
domain = input_slider(-100, 600, value = c(-100, 600)),
clamp = TRUE)
## Reactive data source 2: grand tour
library(tourr)
aps <- 2
fps <- 30
mat <- rescale(as.matrix(flea[1:6]))
tour <- new_tour(mat, grand_tour(), NULL)
start <- tour(0)
proj_data <- reactive({
invalidateLater(1000 / fps, NULL);
step <- tour(aps / fps)
data.frame(center(mat %*% step$proj), species = flea$species)
})
proj_data %>% ggvis(~X1, ~X2, fill = ~species) %>%
layer_points() %>%
scale_numeric("x", domain = c(-1, 1)) %>%
scale_numeric("y", domain = c(-1, 1)) %>%
add_axis("x", title = "") %>% add_axis("y", title = "") %>%
set_options(duration = 0)
terminateApp("<your app's name>")
library(devtools)
install_github('rCharts', 'ramnathv')
require(XML)
require(rCharts)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
-7.5
0
7.5
15
2000
1990
1980
1970
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
rPlot(m1)
plot(m1)
mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
hPlot(x = "Wr.Hnd", y = "NW.Hnd", data = MASS::survey, type = c("line", "bubble", "scatter"), group = "Clap", size = "Age")
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$print("chart7")
rPlot(map3)
plot(map3)
Leaflet$new()
Leaflet$new()$setView(c(51.505, -0.09), zoom = 13)
Leaflet$new()$setView(c(51.505, -0.09), zoom = 13)$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
Leaflet$new()$setView(c(51.505, -0.09), zoom = 13)$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
write(map3$print("chart7"), file = "~/Data.txt")
write(map3, file = "~/Data.txt")
sink("~/sink-examp.txt")
i <- 1:10
outer(i, i, "*")
sink()
unlink("sink-examp.txt")
cat(map3$print("chart7"), file = "~/Data.txt")
sink('~/analysis-output.txt')
cat(map3$print("chart7"), file = "~/Data.txt")
sink()
obesity = read.csv(
'http://www.stat.berkeley.edu/classes/s133/data/obesity.csv',
stringsAsFactors = F
)
names(obesity) = gsub("\\.", "_", names(obesity))
q()
setwd("~/1.WebSite/1.Data_Posts/3.Lending_club")
library(ggplot2)
library(maps)
loans <- read.csv("SmallLoan.csv", header=TRUE, skip = 1)
View(loans)
summary(loans)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
describe(loans)
library(pastecs)
install.packages("pastecs")
library(pastecs)
stat.desc(mydata)
stat.desc(loans)
plot(loans)
plot(loans$loan_amnt)
df = data.frame(lans$id, loans$loan_amnt)
df = data.frame(lanns$id, loans$loan_amnt)
df = data.frame(loan$id, loans$loan_amnt)
df = data.frame(loans$id, loans$loan_amnt)
plot(df)
plot(data.frame(loans$member_id, loans$loan_amnt))
loans <- read.csv("SmallLoan.csv", header=TRUE)
setwd("~/1.WebSite/1.Data_Posts/3.Lending_club")
loans <- read.csv("SmallLoan.csv", header=TRUE)
1
loans <- read.csv("SmallLoan.csv", header=TRUE, skip = 1)
View(loans)
plot(data.frame(loans$funded_amnt_inv , loans$loan_amnt))
plot(data.frame(loans$loan_amnt,loans$funded_amnt_inv))
plot(data.frame(loans$term , loans$funded_amnt_inv))
t.test(data.frame(loans$term , loans$funded_amnt_inv))
t.test(loans$funded_amnt_inv~loans$term)
plot(data.frame(loans$int_rate , loans$funded_amnt_inv))
plot(data.frame(loans$grade , loans$funded_amnt_inv))
setwd("~/2.Github/2.DataSci_Repos/1.Lending_Club/Lending_Club_Data_Analysis")
setwd("~/2.Github/2.DataSci_Repos/1.Lending_Club/Lending_Club_Data_Analysis")
setwd("~/2.Github/2.DataSci_Repos/1.Lending_Club/Lending_Club_Data_Analysis")
loans <- read.csv("SmallLoan.csv", header=TRUE, stringsAsFactors=FALSE, skip = 1)
View(loans)
View(loans)
plot(data.frame(loans$home_ownership , loans$funded_amnt_inv))
plot(data.frame(loans$annual_inc , loans$funded_amnt_inv))
lm(loans$annual_inc ~ loans$funded_amnt_inv )
linMod <- lm(loans$annual_inc ~ loans$funded_amnt_inv )
plot(lonMod)
linMod <- lm(loans$annual_inc ~ loans$funded_amnt_inv )
plot(lonMod)
plot(linMod)
rf1 <- randomForest(loans$annual_inc ~ loans$funded_amnt_inv, loans, ntree=50, norm.votes=FALSE)
library(randomForest)
rf1 <- randomForest(loans$annual_inc ~ loans$funded_amnt_inv, loans, ntree=50, norm.votes=FALSE)
rf1
plot(rf1)
library(randomForest)
library(miscTools)
library(ggplot2)
cols <- c('is_red', 'fixed.acidity', 'density', 'pH', 'alcohol')
rf <- randomForest(alcohol ~ ., data=train[,cols], ntree=20)
install.packages("ggplot2")
library(randomForest)
library(miscTools)
library(ggplot2)
cols <- c('is_red', 'fixed.acidity', 'density', 'pH', 'alcohol')
rf <- randomForest(alcohol ~ ., data=train[,cols], ntree=20)
library(rpart)
rf2 <- rpart(loans$annual_inc ~ loans$funded_amnt_inv, method="class", data=loans)
printcp(fit) # display the results
printcp(rf2) # display the results
plotcp(rf2) # visualize cross-validation results
summary(rf2) # detailed summary of splits
plot(ref2, uniform=TRUE, main="Classification Tree for Kyphosis")
plot(rf2, uniform=TRUE, main="Classification Tree for Kyphosis")
text(rf2, use.n=TRUE, all=TRUE, cex=.8)
plot(rf2)
pfit<- prune(rf2, cp=0.01160389) # from cptable
plot(pfit)
library(party)
fit <- ctree(loans$annual_inc ~ loans$funded_amnt_inv)
plot(fit)
plot(data.frame(loans$is_inc_v , loans$funded_amnt_inv))
plot(data.frame(loans$purpose , loans$funded_amnt_inv))
plot(data.frame(loans$addr_state , loans$funded_amnt_inv))
plot(data.frame(loans$total_pymnt, loans$funded_amnt_inv))
lm(loans$total_pymnt~loans$funded_amnt_inv)
plot(data.frame(loans$loan_status, loans$funded_amnt_inv))
plot(data.frame(loans$is_inc_v , loans$loan_status))
ggplot2(data.frame(loans$is_inc_v , loans$loan_status)
ggplot2(data.frame(loans$is_inc_v , loans$loan_status))
#---purpose
ggplot2(data.frame(loans$is_inc_v , loans$loan_status))
ggplot((data.frame(loans$is_inc_v , loans$loan_status))
ggplot((data.frame(loans$is_inc_v , loans$loan_status)))
ggplot((data.frame(loans$is_inc_v , loans$loan_status)))
plot(data.frame(loans$loan_amnt,loans$funded_amnt_inv))
plot(data.frame(loans$term , loans$funded_amnt_inv))
t.test(loans$funded_amnt_inv~loans$term)
library(glm2)
install.packages("glm2")
library(glm2)
fit1 <- glm(loans$term ~ loans$funded_amnt_inv, family=binomial(link="logit"), control=glm.control(trace=TRUE))
summary(linMod)
summary(pfit)
summary(fit)
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
print(d.AD <- data.frame(treatment, outcome, counts))
glm.D93 <- glm(counts ~ outcome + treatment, family=poisson())
anova(glm.D93)
summary(glm.D93)
glmtest <- glm(loans$term ~ loans$funded_amnt_inv, family=poisson())
glmtest <- glm(loans$term ~ loans$funded_amnt_inv, family=binomial())
anova(glm.D93)
summary(glm.D93)
library(MASS)
data(anorexia)
anorex.1 <- glm(Postwt ~ Prewt + Treat + offset(Prewt),
family = gaussian, data = anorexia)
summary(anorex.1)
clotting <- data.frame(
u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12))
summary(glm(lot1 ~ log(u), data=clotting, family=Gamma))
summary(glm(lot2 ~ log(u), data=clotting, family=Gamma))
cuse <- read.table("http://data.princeton.edu/wws509/datasets/cuse.dat", header=TRUE)
lrfit <- glm( cbind(using, notUsing) ~ age + education + wantsMore , family = binomial)
attach(cuse)
lrfit <- glm( cbind(using, notUsing) ~ age + education + wantsMore , family = binomial)
lrfit
summery(cuse)
sumary(cuse)
summary(cuse)
head(cuse)
cbind(using, notUsing)
fit <- glm(loans$term ~ loans$funded_amnt_inv  , data=mydata,family=binomial())
fit <- glm(loans$term ~ loans$funded_amnt_inv  , data=loans,family=binomial())
loans$term <- as.factor(loans$term)
fit <- glm(loans$term ~ loans$funded_amnt_inv  , data=loans,family=binomial())
fit1 <- glm(loans$term ~ loans$funded_amnt_inv, family=binomial(link="logit"), control=glm.control(trace=TRUE))
summary(fit)
plot(fit)
anova(fit,test="Chisq")
summary(fit1)
plot(fit1)
anova(fit1,test="Chisq")
plot(data.frame(loans$term , loans$funded_amnt_inv))
loans$int_rate <- as.factor(loans$int_rate)
fit <- glm(loans$int_rate ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq")
fit <- glm(loans$grade ~ loans$funded_amnt_inv, data=loans,family=binomial())
plot(data.frame(loans$grade , loans$funded_amnt_inv))
loans$grade <- as.factor(loans$grade)
as.factor(loans$grade)
fit <- glm(loans$grade ~ loans$funded_amnt_inv, data=loans,family=binomial())
smmary(fit)
summary(fit)
anova(fit,test="Chisq")
plot(data.frame(loans$grade , loans$funded_amnt_inv))
loans$grade <- as.factor(loans$grade)
as.factor(loans$grade)
fit <- glm(loans$grade ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq")
plot(data.frame(loans$home_ownership , loans$funded_amnt_inv))
loans$home_ownership <- as.factor(loans$home_ownership)
fit <- glm(loans$home_ownership ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 0.28
plot(data.frame(loans$annual_inc , loans$funded_amnt_inv))
linMod <- lm(loans$annual_inc ~ loans$funded_amnt_inv )
plot(linMod)
plot(linMod)
summary(linMod)
t.test(linMod)
t.test(loans$annual_inc ~ loans$funded_amnt_inv )
t.test(loans$annual_inc, loans$funded_amnt_inv )
plot(data.frame(loans$is_inc_v , loans$funded_amnt_inv))
loans$in_inc_v <- as.factor(loans$is_inc_v)
fit <- glm(loans$home_ownership ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 0.0188
fit <- glm(loans$is_inc_v ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 0.0188
loans$is_inc_v <- as.factor(loans$is_inc_v)
fit <- glm(loans$is_inc_v ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 0.0188
plot(data.frame(loans$is_inc_v , loans$loan_status))
fit <- glm(loans$is_inc_v ~ loans$loan_status, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 4.212e-05
fit <- glm(loans$loan_status ~ loans$is_inc_v, data=loans,family=binomial())
loans$loan_status <- as.factor(loans$loan_status)
plot(data.frame(loans$is_inc_v , loans$loan_status))
fit <- glm(loans$loan_status ~ loans$is_inc_v, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 4.212e-05
plot(data.frame(loans$purpose , loans$funded_amnt_inv))
plot(data.frame(loans$addr_state , loans$funded_amnt_inv))
plot(data.frame(loans$total_pymnt, loans$funded_amnt_inv))
lm(loans$total_pymnt~loans$funded_amnt_inv)
plot(data.frame(loans$loan_status, loans$funded_amnt_inv))
summary(fit)
fit <- glm(loans$loan_status ~ loans$funded_amt_inv, data=loans,family=binomial())
fit <- glm(loans$loan_status ~ loans$funded_amnt_inv, data=loans,family=binomial())
summary(fit)
anova(fit,test="Chisq") #chi 0.2809
exit
q()
